package servlets;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

//@WebServlet("/guest/list")
public class ListServlet extends HttpServlet {

	@Override
	public void init() throws ServletException {
		super.init();

		try {
			// DriverManager를 이용한 java.sql.Driver 인터페이스 구현체를 등록
			DriverManager.registerDriver(new com.mysql.jdbc.Driver());
		} catch (SQLException e) {
			// 예외 발생시 ServletException객체에 현재 서블릿의 service()메서드를 호출한 서블릿컨테이너(톰캣)에게 예외를 던짐
			throw new ServletException(e);
		}
	}

	@Override
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;

		try {
			// DB에 연결하고 DB접속 정보를 다루는 객체(Connection) 반환
			conn = DriverManager.getConnection(
				"jdbc:mysql://localhost/basecamp", //JDBC URL
				"root",	// DBMS user id
				"1234"); // DBMS user pwd
			
			// 연결한 DB에 대한 Connection객체로부터 SQL문을 보내는데 사용되는 객체 생성
			stmt = conn.createStatement();
			
			// members테이블로부터 CRE_DATE(작성시간)순으로 정렬하여 회원들의 정보를 뽑는 SQL문을 실행한 결과를 반환
			rs = stmt.executeQuery(
				"SELECT NUM, EMAIL, PWD, CONTENT, CRE_DATE " + 
				"FROM guest " +
				"ORDER BY CRE_DATE DESC ");
			
			// default=???로 되어있으므로 getWriter()함수 호출전에 반드시 재설정
			// response.setContentType("test/html");
			// resopnse.setCharacterEncoding("UTF-8");
			response.setContentType("text/html; charset=UTF-8");
			
			// response객체의 출력버퍼(클라이언트로 보내는 데이터를 저장하는 버퍼)를 로드
			PrintWriter out = response.getWriter();
			
			out.println("<html><head><title>GuestBook</title>");
			out.println("<link rel='stylesheet'"
				+ "href='" + request.getContextPath() + "/style.css'"
				+ "type='type/css'></head>");
			out.println("<body><h1>GuestBook</h1>");
			
			// 방명록 입력 인터페이스
			out.println("<p><form action='list' method='post'>"); // 동일 서블릿(ListServlet)의 doPost()호출
			out.println("EMAIL<br>");
			out.println("<input type='email' name='email' required><br>");
			out.println("PASSWORD<br>");
			out.println("<input type='password' name='pwd' required><br>");
			out.println("your comment<br>");
			out.println("<textarea name='content' cols='80' rows='5'></textarea><br>");
			out.println("<input type='submit' value='SUBMIT'>");
			out.println("</form></p>");
			out.println("<hr><br>");
			
			while(rs.next()) {
				out.println("<form id='comment' action='modify' method='post'>");
				out.println("<input type='text' name='num' value='" + rs.getInt("NUM") + "' hidden>");
				out.println("<label>PWD</label>");
				out.println("<input type='password' name='pwd' size='10' required>");
				out.println("<input type='submit' value='MODIFY'><br>");
				out.println("<label>USER</label>" + " " + rs.getString("EMAIL") + "<br>");
				out.println("<label>COMMENT</label><br>");
				out.println("<span>" + rs.getString("CONTENT") + "</span><br>");
				out.println("</form>");
			}
			out.println("</body></html>");
			
		} catch (Exception e) {
			// 예외 발생시 ServletException객체에 현재 서블릿의 service()메서드를 호출한 서블릿컨테이너(톰캣)에게 예외를 던짐
			throw new ServletException(e);
		} finally {
			// 각종 자원 반환
			// 반드시 최하위 객체(ResultSet)부터 역순으로 해제 (각 객체가 서로에게 종속되어있기 때문)
			try {if (rs != null) rs.close();} catch(Exception e) {}
			try {if (stmt != null) stmt.close();} catch(Exception e) {}
			try {if (conn != null) conn.close();} catch(Exception e) {}
		}
	}
	
	@Override
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Connection conn = null;
		PreparedStatement stmt = null;

		try {
			DriverManager.registerDriver(new com.mysql.jdbc.Driver());
			conn = DriverManager.getConnection(
					"jdbc:mysql://localhost/basecamp", //JDBC URL
					"root",
					"1234");
			stmt = conn.prepareStatement(
					"INSERT INTO guest(EMAIL, PWD, CONTENT, CRE_DATE, MOD_DATE)"
					+ " VALUES (?,?,?,NOW(),NOW())");
			
			// getParameter()는 전달받은 데이터가 기본적으로 ISO-8859-1(Latin)으로 인코딩되었다고 가정하고
			// 전달받은 각 바이트를 UNICODE로 변환하고 반환
			// -> 클라이언트(브라우저)에서 전달하는 데이터는 해당 사용자의 브라우저 인코딩 설정에 따라 인코딩하여 전달.
			//		but, getParameter()는 무조건 ISO-8859-1이라고 해석해버리므로 문제 발생 가능
			// -> setCharacterEncoding()메서드로 반드시 데이터를 어떻게 읽을 것인지 선언
			request.setCharacterEncoding("UTF-8");
			
			// 클라이언트(브라우저)에서 입력한 데이터를 읽어서 SQL쿼리문에 삽입
			stmt.setString(1, request.getParameter("email"));
			stmt.setString(2, request.getParameter("pwd"));
			stmt.setString(3, request.getParameter("content"));
			stmt.executeUpdate();
			
			// getWriter()호출전에 출력데이터 문서형식, 문자집합 설정 
			response.setContentType("text/html; charset=UTF-8");
			PrintWriter out = response.getWriter();
			out.println("<html><head><title>회원등록결과</title></head>");
			out.println("<body>");
			out.println("<p>등록 성공입니다!</p>");
			out.println("</body></html>");
			
		} catch (Exception e) {
			// 예외발생시, ServletException에 예외를 담아서 현재 서블릿을 호출한 서블릿컨테이너(톰캣)에게 전달
			throw new ServletException(e);
			
		} finally {
			// 반드시 종속관계의 역순으로 자원해제
			try {if (stmt != null) stmt.close();} catch(Exception e) {}
			try {if (conn != null) conn.close();} catch(Exception e) {}
		}
	}
}
