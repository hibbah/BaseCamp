package servlets;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;

import javax.servlet.GenericServlet;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class BoardListServlet extends GenericServlet {

	@Override
	public void service(ServletRequest request, ServletResponse response) throws ServletException, IOException {
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;

		try {
			// DriverManager를 이용한 java.sql.Driver 인터페이스 구현체를 등록
			DriverManager.registerDriver(new com.mysql.jdbc.Driver());
			
			// DB에 연결하고 DB접속 정보를 다루는 객체(Connection) 반환
			conn = DriverManager.getConnection(
					"jdbc:mysql://localhost/studydb", //JDBC URL
					"root",	// DBMS 사용자 아이디
					"1234");	// DBMS 사용자 암호
			
			// 연결한 DB에 대한 Connection객체로부터 SQL문을 보내는데 사용되는 객체 생성
			stmt = conn.createStatement();
			
			// members테이블로부터 MNO(회원번호)순으로 정렬하여 회원들의 정보를 뽑는 SQL문을 실행한 결과를 반환
			rs = stmt.executeQuery(
					"SELECT MNO,NAME,EMAIL,CRE_DATE" + 
					" FROM members" +
					" ORDER BY CRE_DATE DESC");
			
			// default=???로 되어있으므로 getWriter()함수 호출전에 반드시 재설정
			// response.setContentType("test/html");
			// resopnse.setCharacterEncoding("UTF-8");
			response.setContentType("text/html; charset=UTF-8");
			
			// response객체의 출력버퍼(클라이언트로 보내는 데이터를 저장하는 버퍼)를 로드
			PrintWriter out = response.getWriter();
			
			out.println("<html><head><title>회원목록</title></head>");
			out.println("<body><h1>회원목록</h1>");
			out.println("<p><a href='add'>신규 회원</a></p>"); // AddServlet 호출
			
			while(rs.next()) {
				out.println(
					rs.getInt("MNO") + "," +
					rs.getString("NAME") + "," +
					rs.getString("EMAIL") + "," + 
					rs.getDate("CRE_DATE") + "<br>"
				);
			}
			out.println("</body></html>");
			
		} catch (Exception e) {
			// 예외 발생시 ServletException객체에 현재 서블릿의 service()메서드를 호출한 서블릿컨테이너(톰캣)에게 예외를 던짐
			throw new ServletException(e);
			
		} finally {
			// 각종 자원 반환
			// 반드시 최하위 객체(ResultSet)부터 역순으로 해제 (각 객체가 서로에게 종속되어있기 때문)
			try {if (rs != null) rs.close();} catch(Exception e) {}
			try {if (stmt != null) stmt.close();} catch(Exception e) {}
			try {if (conn != null) conn.close();} catch(Exception e) {}
		}
	}
}
